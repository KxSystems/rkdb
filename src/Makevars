OSFLAG :=
MS :=
QLIB :=
QLIBS :=

ifeq ($(OS),Windows_NT)
  OSFLAG = w
  QLIB = est
  QLIBS = .lib
  ifeq "$(WIN)" "64"
    MS = 64
  else
    MS = 32
  endif
else
  UNAME_S := $(shell uname -s)
  ifeq ($(UNAME_S),Linux)
    OSFLAG = l
  endif
  ifeq ($(UNAME_S),Darwin)
    OSFLAG = m
  endif
  ifeq ($(UNAME_S),MSYS_NT-6.3-WOW)
  	OSFLAG = w
  endif
  SUB_UNAME := $(findstring MINGW32, $(UNAME_S))
  $(info UNAME_S="$(UNAME_S)")
  ifeq ($(SUB_UNAME), MINGW32)
    OSFLAG = w
  endif
  MS=$(shell getconf LONG_BIT)
  QLIB=e
  QLIBS=.o
endif
QARCH=$(OSFLAG)$(MS)

PKG_CFLAGS=-D_GNU_SOURCE
ifeq ($(OSFLAG),w)
PKG_LIBS=-L. $(QLIB).dll -lws2_32 -liphlpapi
else
PKG_LIBS=$(QLIB)$(QLIBS)
endif
OBJECTS=rkdb.o
.PHONY: all lib k.h
all: k.h $(QLIB)$(QLIBS)
est.lib:
	curl -O -J -L https://github.com/KxSystems/kdb/raw/master/$(QARCH)/est.lib
	curl -O -J -L https://github.com/KxSystems/kdb/raw/master/$(QARCH)/est.dll
e.o:
	curl -O -J -L https://github.com/KxSystems/kdb/raw/master/$(QARCH)/e.o
k.h:
	curl -O -J -L https://github.com/KxSystems/kdb/raw/master/c/c/k.h
